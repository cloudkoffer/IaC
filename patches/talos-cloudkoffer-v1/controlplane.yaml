cluster:
  apiServer:
    certSANs:
      - 192.168.1.101
      - kube.case.local
  extraManifests:
    # Metrics server
    # https://www.talos.dev/latest/kubernetes-guides/configuration/deploy-metrics-server/
    - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.7.1/deploy/standalone-install.yaml
    - https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.6.3/components.yaml
  inlineManifests:
    - name: cilium
      contents: |
        ---
        # Source: cilium/templates/cilium-agent/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-relay/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-relay"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-ui/serviceaccount.yaml
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: cilium-ca
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlJRdTl5VjNDdnRXeWx4amZUakdHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFek1UTXhORE16V2hjTk1qWXdOakV5TVRNeApORE16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFhhb0ovYTBQTnpVU1hSQ3JqbUdoY1FvWTlsU2x0UnJJSlVMMTFETGhhblY2RFRpbDcKSXBicGI0R08rS1hXaXJyUytxeERFUTVGd3grK3RuTW5RdlZGMzlVbGtUNnZmK1B3eWdEQUswOGMvbCtvcmtsSwpOQ2N6UStMbHdlNTN2VDljaHB0NGVrdnEybmZkTElGLzdUS2htNGJ6QzlhTmVrdUlUSUM4TlNvNmgwYzNLL1lwCjVtU2Z6bTBGVW5UVTdnSDlyS0RvbDY2UnFDWHg3cHVycnRUY2JQTlZSWVQ4Wll3UmkwTnczdVFUbHVreXdmRkoKbWlXRElSNEFQNjF4LzdBNC90RGsvMU1YR2NXV1JhSENUMUMrOG1RRDN5VG9ESXNYZk82Y056RnJRa1pvMmR1QgovcVEzVEpuQllMenFlK0tCSzkvWEpGcW5JTnRuVzNwbjVzTXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjczVrYjRlcmc4TXJtbEgxa3FUblR5cmRnd3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdjFJc0ZCNlREU3NETXk5VTV2QlNMRXhNZU9oSThLTXEyREd4ckZKSW96TzhIbXdNTVhEdk93CnFadXlYYlQyZ3hrMEpWZzQ1MHNYT0NaZTlzcFFLeXpoNVV1a3pVb2l4bmhja0tMVS9nV29NL1Z2OUF0TGVROG8KUTZmNEt1VStYRDZ2VHFQc3VXSytkT0FsT0JzbzN0c0N4eXlFbkZCK3YvMnEzak52T0Nndk91dUp4OVJ1VFRBcwpFVWJNeUMrY2I4SWZqaGZENlBUbGtWZmhmUW1lYWlqOGh6d0Q2WjhrNzdVajJzYno3RjliU3orYXdMYTZ1RFpXCkFPSkZiN0V5Y3hYei9nZVV2NWJqRGpNRVJzeXNWYTBLODZEeUE3ZmFDMUNseE9UQ3B0U0g5alNycEVNQVBJbDAKS01TOTJWN3R6dXV2NnlDR01nSmF3V2hJYi9pK3ZHcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMTJxQ2YydER6YzFFbDBRcTQ1aG9YRUtHUFpVcGJVYXlDVkM5ZFF5NFdwMWVnMDRwCmV5S1c2VytCanZpbDFvcTYwdnFzUXhFT1JjTWZ2clp6SjBMMVJkL1ZKWkUrcjMvajhNb0F3Q3RQSFA1ZnFLNUoKU2pRbk0wUGk1Y0h1ZDcwL1hJYWJlSHBMNnRwMzNTeUJmKzB5b1p1Rzh3dldqWHBMaUV5QXZEVXFPb2RITnl2MgpLZVprbjg1dEJWSjAxTzRCL2F5ZzZKZXVrYWdsOGU2YnE2N1UzR3p6VlVXRS9HV01FWXREY043a0U1YnBNc0h4ClNab2xneUVlQUQrdGNmK3dPUDdRNVA5VEZ4bkZsa1dod2s5UXZ2SmtBOThrNkF5TEYzenVuRGN4YTBKR2FObmIKZ2Y2a04weVp3V0M4Nm52aWdTdmYxeVJhcHlEYloxdDZaK2JETXdJREFRQUJBb0lCQVFEVC9ONzdZYVhTSzhUcQpUNDBkZU9pS2tuVGt1WnVSREZjOFQ1YUNUOGhFZEVXRVZqRUFHbVFFeVZUb1M4MTN1Z0pzaVg5b2FLcHhBTHFHCnhhbkE0MlhZSTVQd2FtVVQ5SGx1aG53Q29Sd3ozaWhwS1VxNm1XUlNVT1pEVUh2S25oUnlpNDBJSE9JRTlvV3EKeEplVU91cnVtczFNOVVObzZ3YlYxT09EVTVhQkRMMDVWNUllM1ViWWRxaUNhVE54a2lLdDNaZnBFVndqQUJOYwpvWFYyV0Z1ZjZKWVEyMXJGelgvRkozZGlGRVJPeUxqTnFjQWlkbUtKSElqWGc1Rk96bmtETDZTczJrSmt5WHhjCnMvVXBkd2dmZXVrTC9BWGwwTFFKb056cmdHNFduZHhBWForNDEyMXFXK1dVeUVleGVmN1BiZ0xYeEgxbDBNVVIKQnRUZkRuelJBb0dCQVBBNGZyRGQvNHQrSWhRLzNscFhxekV2dElYRHllMS9tQ0ZCeGpHYXpSNUJwM2h1blB3MgpSWlhueVVJVkY2eDVORGZISWs5SUtncCt2TUdlWWtmQ0lscU0zZ1lvQ3FJdGRtNldBd3Y5aldKWjIxSGMyK3JJCkt5cGJlaGFSMHhDWUFXdjNzMVFUTFNoYzAvOEdKSVZqdkY4RkhZQXdyWFVPZEE4dDcrWWFsd2JGQW9HQkFPV1EKNTZ1Sm5xbWFlbzhsdGpHa3UrZHNCeTY3NFduaTFaSnVZK1lYNkg0N0M2SjZUaFQ1b1ZVcjBTWjNSWGtkLzEySgp6L1Rtb24wWUdZRy82Y3RUTUZXd2loZDYwcExNQXQ2d1hRK3JndnFTSTJYTWxoZ0pTdFloaFIyOXVyM0hEVDErCkYxTjIwdXR3NFlIRy9DNW4zaUhUSC9McUdObWhxenorb21lUFR3R1hBb0dBYUIzRVkzcEV5VHZwSDJlelF1cmUKaXhvSEh6Y0Y3VWN4TTdEamF4cVNMcnY4RHdtNlJ1SnE5SmNhdHVhWGRTeXZRa0d3RURiUjZleVdlVURoamdLSgppeitrOTN3aFo3dFdxb1dnV25FUjkzL0V2RTJDajlja1JsNlJvdmlmUjREcWxOWXVScEZ0TUNKVHpDUG9ibHdWCkNBWWFqRFlNNkVCVWMwUFF4Nlhjc1pVQ2dZQkROWWhOOVUySlZCdTdtd3ZiUHVKd1gzVSszbXloSm5MbW13RU8KVlVPUTZWSi9zQlQ2R1JkOXF3VmhvSnVyV1BmeGQ2NTFnYXhpdVZLR1pSeGFsYkZaOVFTSTJVR2JEclZzWXUvcgo3WWU4T2xxNHJBdnBYNWNVVjkzMEZoNzgvckRHcHdySE9jdUllSlRjL05mSjhramJXRWRMUS9RZ2l5OXAvUmFwCkFSRGRZd0tCZ0FUOWdZK0RCT2VycWFZVlppeTQxRDg2bmV2Y3p5ZnVvL1llZkQwWEpmanR4V1FTOXVxelFzaTgKaVRqOWhjeUdmYlF5TkF5dURxZTZnb0J2YllhUzRESG1uZGlOZ2w2VUpPQ0ZHbXpvR3g3N3d5a2lQd3V4RnBTZwp6NTZoSU14THJsR3laM0ViSC9pekJWN0E1NzRWRTBwWTNCb1UxOEE4V3NPZnFJNXJrNjdOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-ca-secret
          namespace: kube-system
        data:
          ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlJRdTl5VjNDdnRXeWx4amZUakdHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFek1UTXhORE16V2hjTk1qWXdOakV5TVRNeApORE16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFhhb0ovYTBQTnpVU1hSQ3JqbUdoY1FvWTlsU2x0UnJJSlVMMTFETGhhblY2RFRpbDcKSXBicGI0R08rS1hXaXJyUytxeERFUTVGd3grK3RuTW5RdlZGMzlVbGtUNnZmK1B3eWdEQUswOGMvbCtvcmtsSwpOQ2N6UStMbHdlNTN2VDljaHB0NGVrdnEybmZkTElGLzdUS2htNGJ6QzlhTmVrdUlUSUM4TlNvNmgwYzNLL1lwCjVtU2Z6bTBGVW5UVTdnSDlyS0RvbDY2UnFDWHg3cHVycnRUY2JQTlZSWVQ4Wll3UmkwTnczdVFUbHVreXdmRkoKbWlXRElSNEFQNjF4LzdBNC90RGsvMU1YR2NXV1JhSENUMUMrOG1RRDN5VG9ESXNYZk82Y056RnJRa1pvMmR1QgovcVEzVEpuQllMenFlK0tCSzkvWEpGcW5JTnRuVzNwbjVzTXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjczVrYjRlcmc4TXJtbEgxa3FUblR5cmRnd3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdjFJc0ZCNlREU3NETXk5VTV2QlNMRXhNZU9oSThLTXEyREd4ckZKSW96TzhIbXdNTVhEdk93CnFadXlYYlQyZ3hrMEpWZzQ1MHNYT0NaZTlzcFFLeXpoNVV1a3pVb2l4bmhja0tMVS9nV29NL1Z2OUF0TGVROG8KUTZmNEt1VStYRDZ2VHFQc3VXSytkT0FsT0JzbzN0c0N4eXlFbkZCK3YvMnEzak52T0Nndk91dUp4OVJ1VFRBcwpFVWJNeUMrY2I4SWZqaGZENlBUbGtWZmhmUW1lYWlqOGh6d0Q2WjhrNzdVajJzYno3RjliU3orYXdMYTZ1RFpXCkFPSkZiN0V5Y3hYei9nZVV2NWJqRGpNRVJzeXNWYTBLODZEeUE3ZmFDMUNseE9UQ3B0U0g5alNycEVNQVBJbDAKS01TOTJWN3R6dXV2NnlDR01nSmF3V2hJYi9pK3ZHcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMTJxQ2YydER6YzFFbDBRcTQ1aG9YRUtHUFpVcGJVYXlDVkM5ZFF5NFdwMWVnMDRwCmV5S1c2VytCanZpbDFvcTYwdnFzUXhFT1JjTWZ2clp6SjBMMVJkL1ZKWkUrcjMvajhNb0F3Q3RQSFA1ZnFLNUoKU2pRbk0wUGk1Y0h1ZDcwL1hJYWJlSHBMNnRwMzNTeUJmKzB5b1p1Rzh3dldqWHBMaUV5QXZEVXFPb2RITnl2MgpLZVprbjg1dEJWSjAxTzRCL2F5ZzZKZXVrYWdsOGU2YnE2N1UzR3p6VlVXRS9HV01FWXREY043a0U1YnBNc0h4ClNab2xneUVlQUQrdGNmK3dPUDdRNVA5VEZ4bkZsa1dod2s5UXZ2SmtBOThrNkF5TEYzenVuRGN4YTBKR2FObmIKZ2Y2a04weVp3V0M4Nm52aWdTdmYxeVJhcHlEYloxdDZaK2JETXdJREFRQUJBb0lCQVFEVC9ONzdZYVhTSzhUcQpUNDBkZU9pS2tuVGt1WnVSREZjOFQ1YUNUOGhFZEVXRVZqRUFHbVFFeVZUb1M4MTN1Z0pzaVg5b2FLcHhBTHFHCnhhbkE0MlhZSTVQd2FtVVQ5SGx1aG53Q29Sd3ozaWhwS1VxNm1XUlNVT1pEVUh2S25oUnlpNDBJSE9JRTlvV3EKeEplVU91cnVtczFNOVVObzZ3YlYxT09EVTVhQkRMMDVWNUllM1ViWWRxaUNhVE54a2lLdDNaZnBFVndqQUJOYwpvWFYyV0Z1ZjZKWVEyMXJGelgvRkozZGlGRVJPeUxqTnFjQWlkbUtKSElqWGc1Rk96bmtETDZTczJrSmt5WHhjCnMvVXBkd2dmZXVrTC9BWGwwTFFKb056cmdHNFduZHhBWForNDEyMXFXK1dVeUVleGVmN1BiZ0xYeEgxbDBNVVIKQnRUZkRuelJBb0dCQVBBNGZyRGQvNHQrSWhRLzNscFhxekV2dElYRHllMS9tQ0ZCeGpHYXpSNUJwM2h1blB3MgpSWlhueVVJVkY2eDVORGZISWs5SUtncCt2TUdlWWtmQ0lscU0zZ1lvQ3FJdGRtNldBd3Y5aldKWjIxSGMyK3JJCkt5cGJlaGFSMHhDWUFXdjNzMVFUTFNoYzAvOEdKSVZqdkY4RkhZQXdyWFVPZEE4dDcrWWFsd2JGQW9HQkFPV1EKNTZ1Sm5xbWFlbzhsdGpHa3UrZHNCeTY3NFduaTFaSnVZK1lYNkg0N0M2SjZUaFQ1b1ZVcjBTWjNSWGtkLzEySgp6L1Rtb24wWUdZRy82Y3RUTUZXd2loZDYwcExNQXQ2d1hRK3JndnFTSTJYTWxoZ0pTdFloaFIyOXVyM0hEVDErCkYxTjIwdXR3NFlIRy9DNW4zaUhUSC9McUdObWhxenorb21lUFR3R1hBb0dBYUIzRVkzcEV5VHZwSDJlelF1cmUKaXhvSEh6Y0Y3VWN4TTdEamF4cVNMcnY4RHdtNlJ1SnE5SmNhdHVhWGRTeXZRa0d3RURiUjZleVdlVURoamdLSgppeitrOTN3aFo3dFdxb1dnV25FUjkzL0V2RTJDajlja1JsNlJvdmlmUjREcWxOWXVScEZ0TUNKVHpDUG9ibHdWCkNBWWFqRFlNNkVCVWMwUFF4Nlhjc1pVQ2dZQkROWWhOOVUySlZCdTdtd3ZiUHVKd1gzVSszbXloSm5MbW13RU8KVlVPUTZWSi9zQlQ2R1JkOXF3VmhvSnVyV1BmeGQ2NTFnYXhpdVZLR1pSeGFsYkZaOVFTSTJVR2JEclZzWXUvcgo3WWU4T2xxNHJBdnBYNWNVVjkzMEZoNzgvckRHcHdySE9jdUllSlRjL05mSjhramJXRWRMUS9RZ2l5OXAvUmFwCkFSRGRZd0tCZ0FUOWdZK0RCT2VycWFZVlppeTQxRDg2bmV2Y3p5ZnVvL1llZkQwWEpmanR4V1FTOXVxelFzaTgKaVRqOWhjeUdmYlF5TkF5dURxZTZnb0J2YllhUzRESG1uZGlOZ2w2VUpPQ0ZHbXpvR3g3N3d5a2lQd3V4RnBTZwp6NTZoSU14THJsR3laM0ViSC9pekJWN0E1NzRWRTBwWTNCb1UxOEE4V3NPZnFJNXJrNjdOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-relay-client-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlJRdTl5VjNDdnRXeWx4amZUakdHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFek1UTXhORE16V2hjTk1qWXdOakV5TVRNeApORE16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFhhb0ovYTBQTnpVU1hSQ3JqbUdoY1FvWTlsU2x0UnJJSlVMMTFETGhhblY2RFRpbDcKSXBicGI0R08rS1hXaXJyUytxeERFUTVGd3grK3RuTW5RdlZGMzlVbGtUNnZmK1B3eWdEQUswOGMvbCtvcmtsSwpOQ2N6UStMbHdlNTN2VDljaHB0NGVrdnEybmZkTElGLzdUS2htNGJ6QzlhTmVrdUlUSUM4TlNvNmgwYzNLL1lwCjVtU2Z6bTBGVW5UVTdnSDlyS0RvbDY2UnFDWHg3cHVycnRUY2JQTlZSWVQ4Wll3UmkwTnczdVFUbHVreXdmRkoKbWlXRElSNEFQNjF4LzdBNC90RGsvMU1YR2NXV1JhSENUMUMrOG1RRDN5VG9ESXNYZk82Y056RnJRa1pvMmR1QgovcVEzVEpuQllMenFlK0tCSzkvWEpGcW5JTnRuVzNwbjVzTXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjczVrYjRlcmc4TXJtbEgxa3FUblR5cmRnd3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdjFJc0ZCNlREU3NETXk5VTV2QlNMRXhNZU9oSThLTXEyREd4ckZKSW96TzhIbXdNTVhEdk93CnFadXlYYlQyZ3hrMEpWZzQ1MHNYT0NaZTlzcFFLeXpoNVV1a3pVb2l4bmhja0tMVS9nV29NL1Z2OUF0TGVROG8KUTZmNEt1VStYRDZ2VHFQc3VXSytkT0FsT0JzbzN0c0N4eXlFbkZCK3YvMnEzak52T0Nndk91dUp4OVJ1VFRBcwpFVWJNeUMrY2I4SWZqaGZENlBUbGtWZmhmUW1lYWlqOGh6d0Q2WjhrNzdVajJzYno3RjliU3orYXdMYTZ1RFpXCkFPSkZiN0V5Y3hYei9nZVV2NWJqRGpNRVJzeXNWYTBLODZEeUE3ZmFDMUNseE9UQ3B0U0g5alNycEVNQVBJbDAKS01TOTJWN3R6dXV2NnlDR01nSmF3V2hJYi9pK3ZHcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRY0haR2tGR0xkdEVQZ25TMzlDWlUrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFek1UTXhORE16V2hjTk1qWXdOakV5TVRNeApORE16V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESGF5bVVKN0pWVWxpbVZzcnFnRHkxUGVuTmJldVgKVEZxWnhiRFdpbG9BeFZLeElneGhaTEU0U3RlNjUwaXFUN2k3M2lJVlJ1U3ZXTjdhOEQzNmx0VnljZXdSZWFNWgpiK0NRZ29KemtMMVp5T1kzWjEwcVJ0VnRnK09OSGJUNENhTW9IQm1BRjNVanQ5cVVFcnUwY3lLdjJSOGd1UVljCm8rMG9uSCtELzhZNUN2WXk4bUVIZmFEMEtiVjJBMG9GTlpZSDJaV09zaVJ0c202MEJrSW9qaFRpWk9PaEtGNmsKRnovcWtTOW1MbVRmL0E2YWYzZmtUL20vR1pvK2VuNlZnYkVyS0pUcFc1bkdGRjR1UFhPWGM4NDd1bm9KOU9ycApPNEZTY2hyeHdNU0p6ZjNNMmxHTnBncUpnalR1Q05wZmtpNGFSUVpSYWVOeGtYWkFhZzl4V1I0ckFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZITE9aRytIcTRQREs1cFI5WktrNTA4cQozWU1NTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFjM1FPNXIvOTVGNkc3MCtRUXBxRDAwcE5hVXI2bnJrR0tGUndCMnNiOWF0VGFJRngKcENxb3liaWdNaUoyMTNLM2tva1lhUThxRkFJT2hPcUpCY1ZIeFhDTHdISlhUOUpWNnREdlN1T2E2VDRUWDAwcwo1eXhUSmJJNktjTy9TeWpDSUlGN01CVFdneHBtSG5ocWphTkgwVFh4UEpOeUtjYndSalNwRGpQaSt1K2ZlOGFoClRRRUJCZmRwUkF6SjFPbm5UUnp6enN4bW0yeVJtS3pseHloYitGd1ZucXZlVTNJTzEvLzZXOWlzdElXMDN4cWsKeU1pVjRXRnhNR2l1TEt2Q3djSTJqWHBTRW5QS0pxTnR2MWFoeXVCY3phYldkbUY0SnZBdVIvcFdMbm1BeHpiMwpKc1JwZTN5ODh0SjNEdlNRUnJEamdKV0tzSW80WnlVWk9KbXZlQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDJzcGxDZXlWVkpZcGxiSzZvQTh0VDNwelczcmwweGFtY1d3MW9wYUFNVlNzU0lNCllXU3hPRXJYdXVkSXFrKzR1OTRpRlVia3IxamUydkE5K3BiVmNuSHNFWG1qR1cvZ2tJS0NjNUM5V2NqbU4yZGQKS2tiVmJZUGpqUjIwK0FtaktCd1pnQmQxSTdmYWxCSzd0SE1pcjlrZklMa0dIS1B0S0p4L2cvL0dPUXIyTXZKaApCMzJnOUNtMWRnTktCVFdXQjltVmpySWtiYkp1dEFaQ0tJNFU0bVRqb1NoZXBCYy82cEV2Wmk1azMvd09tbjkzCjVFLzV2eG1hUG5wK2xZR3hLeWlVNlZ1WnhoUmVMajF6bDNQT083cDZDZlRxNlR1QlVuSWE4Y0RFaWMzOXpOcFIKamFZS2lZSTA3Z2phWDVJdUdrVUdVV25qY1pGMlFHb1BjVmtlS3dJREFRQUJBb0lCQUIyVjVYNUlnV210Sk4vUQp3cHdWMkd2Zk9wK3lyaUF0UU1mTmo1WFV3dE9ZY3RNNnhQRnlHZVRMSGNScDZkcnlwdXFnWXhnYkEzU01UOHZWCmxxeGwwbGIvVmRHbDVTK3g3SFFrR0t5Q2pjVVRUQ3h1Rm1GZVR1M0hnbXYrTzBvTlMvcDRhTVFiTnRMTXhRM3cKMVk1SkFwMXFMZmNSM0RsRmpMcll0UVpsWFFnN09BNS9rUXNuVmJqbjgwVGF5WjNOd09UVkk4VXcwMHF0Y1k1awpzYi9Cb1JpZC96Z0IyUTc1RFNibjZRMktLWEREejJIQzAxSXVXZTNhVWNESmRFQ3NUNXRVRVpQbzZGWWNFcml6CmU3bEVuZUtiY2VWb0dia3FtcElPMXo5by9pb0FIRzJHRG5LaFNnTm1SY0YzeW1VSTMxVE5GZ0k3eHhxSUVZcVgKSmRSV1I1RUNnWUVBNFhaUWladzhsZUxDamFRcmlvWWM0ZHFKOWU5amYwckUrYUh2MGxRYk5TWjRTQUVncGIxbQpESjFhajlNekxmZHQrOWFDcVJwVk5YdlR6c283a0ZRdlp3eEJuNFdZSExnZmxsTFVCYUViSWt3aTNWZEtlbDAxCkRiU24wcjJpSjVlSC9sQVFBWXFWWEFFM3V6MWtxTHZKbkU0dTQ5cGd5aG5yZE1WdHdqMXMxU01DZ1lFQTRtM1AKNTAyTGJVVWZVeFY3TnVKbXBZWEFGaVh3anNVRWtYdjZRcjRCbFRCMGs2eHQ5UkdBTXIvMGRYWXluS1dYeVBNUApGQUl6aDU3NG00Z3I4anBBRnE3R0xsY3hGMHFPTk1MWFYrRG54SGdNWlU0UHdGN1Y0WVliK1ZCNFRVemtSMUxPCi8vcWxqcUVqWmdkaDBrRFVzcHkxZ3RKblp0a0d0aUtHOTVFdHQxa0NnWUFHR0pqYzM2aVR0T25sd29hYTNEMXoKcmVFRkVVL3paU1ltU2NhZVBUL3ZFL2MwbXpNeXlBZzJWeHJYd0xJbGtBY2RSQk9NVnZYdTJFWkYxUm4vTVFlSApGY0hBZW5BK2Rvd0VHSUU3RmJ3U0ZWVHIveXc0V3NUUWRnNERtTFVGdFFjc1RTWGhwTW1kRHp0ZWlLNXNFWWZGCi9pY3VhZjByK2I5d0ROYUc1ZnBIV1FLQmdRQ2JQRlFVTFVyUXdGb0llU3EvWnhxZWtvTXQ3QmJ2bXMxVi9OeUgKMDRKOFNQc3puenpIanBjSXRDZWlQRVhZdFlMSmh6SW9NcFluZmVyTm50OGFNNnRxb2FwSGJRbkFBU0piczlVMQpiNEVXWm9PQkZMS2gzYUxlK2pYRmlORGhsanpQVlV1TG5jalJiMUk0aWdrYnY4elRJN01obktTOWt6OFJzYnc4CmtMRDZDUUtCZ0E1bm0yaVp0eVlLbm56Y2p0UGRLU1R6aUM1VmJvRjlpMmNLUTNSdFljd2xqN0k3cEdBSWhtY00KZHFIQjZUeWxNbFpnKzB6V2MrVkNvdGJDSHhUYSsrWVJuYU80MjRKVjlKNzZsNncrTEtMdzgweGFHNnNYZ3IwZgo3SHpzanVNMlZsZElTMlQvSmV4RXBadlVzbHZJNUhhb05hdXFEV1YvMXZnTFJEeG90ZEk3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/hubble/tls-helm/server-secret.yaml
        apiVersion: v1
        kind: Secret
        metadata:
          name: hubble-server-certs
          namespace: kube-system
        type: kubernetes.io/tls
        data:
          ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlJRdTl5VjNDdnRXeWx4amZUakdHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFek1UTXhORE16V2hjTk1qWXdOakV5TVRNeApORE16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFhhb0ovYTBQTnpVU1hSQ3JqbUdoY1FvWTlsU2x0UnJJSlVMMTFETGhhblY2RFRpbDcKSXBicGI0R08rS1hXaXJyUytxeERFUTVGd3grK3RuTW5RdlZGMzlVbGtUNnZmK1B3eWdEQUswOGMvbCtvcmtsSwpOQ2N6UStMbHdlNTN2VDljaHB0NGVrdnEybmZkTElGLzdUS2htNGJ6QzlhTmVrdUlUSUM4TlNvNmgwYzNLL1lwCjVtU2Z6bTBGVW5UVTdnSDlyS0RvbDY2UnFDWHg3cHVycnRUY2JQTlZSWVQ4Wll3UmkwTnczdVFUbHVreXdmRkoKbWlXRElSNEFQNjF4LzdBNC90RGsvMU1YR2NXV1JhSENUMUMrOG1RRDN5VG9ESXNYZk82Y056RnJRa1pvMmR1QgovcVEzVEpuQllMenFlK0tCSzkvWEpGcW5JTnRuVzNwbjVzTXpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjczVrYjRlcmc4TXJtbEgxa3FUblR5cmRnd3d3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJdjFJc0ZCNlREU3NETXk5VTV2QlNMRXhNZU9oSThLTXEyREd4ckZKSW96TzhIbXdNTVhEdk93CnFadXlYYlQyZ3hrMEpWZzQ1MHNYT0NaZTlzcFFLeXpoNVV1a3pVb2l4bmhja0tMVS9nV29NL1Z2OUF0TGVROG8KUTZmNEt1VStYRDZ2VHFQc3VXSytkT0FsT0JzbzN0c0N4eXlFbkZCK3YvMnEzak52T0Nndk91dUp4OVJ1VFRBcwpFVWJNeUMrY2I4SWZqaGZENlBUbGtWZmhmUW1lYWlqOGh6d0Q2WjhrNzdVajJzYno3RjliU3orYXdMYTZ1RFpXCkFPSkZiN0V5Y3hYei9nZVV2NWJqRGpNRVJzeXNWYTBLODZEeUE3ZmFDMUNseE9UQ3B0U0g5alNycEVNQVBJbDAKS01TOTJWN3R6dXV2NnlDR01nSmF3V2hJYi9pK3ZHcz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUljQWhOd2VZdnNMdWNUdlNSaXVtL3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE16RXpNVFF6TTFvWERUSTJNRFl4TWpFegpNVFF6TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtwOVhyaWFDSXhYdG5FTHBxcEEKQnNJTTNNSzVVQUMxbjJneklZemVyeFlrRi8vTWgvTmYzVEsrTWpNc1JpWTM4UXpmZXJ4L1NiQTg4anFBdUpXNgo1ajVEcHBRMFZlMW93K21BSm9OWUo0dEhhVjJhaUxLMURFK2F3TW9tcCttRFNvalZGQ1RjZWZvRytsaDlWZDcvCm1QQUI2OVFTaVF4aWduZVFVVjdyMXVvZ3F5NWFNdjIremhtOVpCc3MwTFlKU3hyK0JoNnl6K0xiQXA3QWZoeEsKYjNrcmxibkQyMEs5bmp3UzhQdW1zSFArelY2N0o4RktuOWFDeG45aEdlWWdUTkphSCttb3VmUnJUcVF5eXl1TQpzWUxMRXUxZ01RL3h3bXBGWXB3YzZSbkE5UFI2dm1jdXJGTVEwQmg4NStUZEl6RlBvY2ZGY2UrQzlJYWNOa3ZOCmZBY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWNzNWtiNGVyZzhNcgptbEgxa3FUblR5cmRnd3d3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWRpVTZUYXRTRGo5c0NnN3pkM0I0Qm02Y1BydDUKeTFKUjVLVTZ6ZTd5Wmt6dFFJNFRHeVZqa3dRZUFmbmg0eStmQkJsY3I5WnNuNlNVSFJ6UkJSVVdJWnVWVnhOawp3bTUvQlpmOEtSbjU1VXA0T3drazAyV1c1RFFpZUtSWmJFMzM2TmNuVWpEdWRMRVFjSU9YT2dHNGg1ODFFNlNrCkN1OXNDb203TjNOMGswUXNvNDVCRG0vMFBaeTlVMGhEcGJTd3ZleWlyZ3p2R1F2cFhzWEtYUC9vaGJWa1dLdGQKOHlCTkszaUFTTTBNYnB3bFV5ZGFBWUVFRGNOQUo3N3FybDFVSDR0M01QSmIvc1R2bzhnQVlxTWk5SVdQN1hHQQpGWnFaZ2F1bktBNk56ek45S2FkQ0tZeVh3OUpkTlAzSkVwTmxIZjMrZXplZkQ1MkhKVVRvaElCQnFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
          tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcW4xZXVKb0lqRmUyY1F1bXFrQUd3Z3pjd3JsUUFMV2ZhRE1oak42dkZpUVgvOHlICjgxL2RNcjR5TXl4R0pqZnhETjk2dkg5SnNEenlPb0M0bGJybVBrT21sRFJWN1dqRDZZQW1nMWduaTBkcFhacUkKc3JVTVQ1ckF5aWFuNllOS2lOVVVKTng1K2diNldIMVYzditZOEFIcjFCS0pER0tDZDVCUlh1dlc2aUNyTGxveQovYjdPR2Ixa0d5elF0Z2xMR3Y0R0hyTFA0dHNDbnNCK0hFcHZlU3VWdWNQYlFyMmVQQkx3KzZhd2MvN05YcnNuCndVcWYxb0xHZjJFWjVpQk0wbG9mNmFpNTlHdE9wRExMSzR5eGdzc1M3V0F4RC9IQ2FrVmluQnpwR2NEMDlIcSsKWnk2c1V4RFFHSHpuNU4wak1VK2h4OFZ4NzRMMGhwdzJTODE4QndJREFRQUJBb0lCQUQ0V21EZE1TVTZxNXRNMgpkZ1RNZW1tUys1YWluQ01XQWE2VjZHTC8rZTFyU1o0cm8xc2JqMWZhY2plMnFQbGtLQklURlFTdXFteFhWYk8rCml2cGtiVk5CbWRtaFVhVzdJSlhaeUt6T251QVhLcVVmRVNkYnpkYnp1Y0FrNGNPbHY3QWpRVW5IVFZpanorb0kKQXd6S01xMDlWZUFPdkFCWm83L2RPL1VBbUd6OHpnNG5DYVY5c3lyOWVXendUb0xXNVJkZiszclFnR1gxM0NIRAoxUWRxaGV5N1ZEWGhyL1dwV3JMWHJ6VXVFYktQVnh6TU82Tjlrc3k3bVVNc0RVU2ZhRlNxZFNyYThMZ2VUeU1DCmJEUGpWckh1a2t6WGtPK1NkMko0RWdycWxTeExwajlGY0pvS2VTS3BBajFuV0V1UWtNaUJFdEpMVjdoNXgyZFcKNjJsNlY3a0NnWUVBd0lsS2tQYnVjdWFxZDFSb1Vtb1NRdmJuNllFcHNjSk9vS28yeUJRNnFtMDJUdUp0VldBMgo1Q0tUaVZtd3h3NXRUaHhrdk9HZ0Fqa0RpUkRrWXBoOHppb05aaFNJM0lkKzNPWnN3RFIwVUhVV1RmZW4xcXhtCkpnRk5KaXYxWTZoMXg2MmFXVm1RMFVDMXRRZFF2eTkxOVdLaVgrSThZVU5HeDJ3cldJUElKV1VDZ1lFQTRxKzcKaUJ0T3lkMDBYVXl5VkVmd05mTURmaWtvVlcvTkFhWkgyQ0NMR3daQ2hCcysvZHBHUjlmT2tCMU1FS3RFSk5qbwpManN6WnhIV3ZseWl0QU9MMHA3ZnJPUzYxRjg4bm9UMlR0dXZLUlR4Z2tLdWJ3NTdwcWQzUDhqbi9WUmVCRTNSCjF6ejR1YlpLeXRwUzJlL2lIaXI4dVVDM1hweFNxTTVqcWtmeGF2c0NnWUFYY2FBdXZxS1NReHdHbzdTQU5JSTgKdlN2SDl2NUlzc3c0TEFHM294N3htWksvVURyWDVudElsQjA2NER6eVFBTjNPMlhZeWZCZDFPdGxTVFZGL0NOVwpSekNTZVhXZ3hLN2gzdnptK253ZlArS1RZOUNBQjBYNDRyZXVLalFiQ213dEFDcUhMcXkvamcyU0dXM3ZtYXZYClVVZE1QWlAwaytpT1o5RnZXYnlKTVFLQmdIWjVlZjJzcUFVQXczbHZ1RlFzTlBNOVN6b0lzTGZXY3NMRjhRNlkKRTV2UUxidDFzZnBpdGhDZVRhc3NaTERoa2YvZ0RaajcvK1dDZ1VXRWpOU2dkZGRpaVd5SExzNEg2RnJCQ3lvegp6dHdkd2d0ZVptUk1vWHQ4VXVyWFNjZ3c2K0k3K2N3UVpiNUo4OVVKUGZ3QlQ2Q012d0RqUGZNSXFIcnBRMVdmCnZDRTVBb0dCQUlaZ0tHLzZSdGRGZGhFWjZ4VldZMGR1L3BCalFRV2hXRjZnOWRHMGIrMHQxaVlTV3NHSzgzS3AKQTYySGxHQmhrTm80UDQ3ZW50d2JGbFNDM3ExNmlwQmJxQll0K05uYXhjNGpTZ29qV2FCaVRDUmJ0NmFQT3pUTgpFL1M0RnB4aFp5OUQ3RHVPMUZ4bWRvYTNpQmdkUVZsdXk4ejZBdUU5V2V5eHFlaDc3UHovCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
        ---
        # Source: cilium/templates/cilium-configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: cilium-config
          namespace: kube-system
        data:

          # Identity allocation mode selects how identities are shared between cilium
          # nodes by setting how they are stored. The options are "crd" or "kvstore".
          # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
          #   These can be queried with:
          #     kubectl get ciliumid
          # - "kvstore" stores identities in an etcd kvstore, that is
          #   configured below. Cilium versions before 1.6 supported only the kvstore
          #   backend. Upgrades from these older cilium versions should continue using
          #   the kvstore by commenting out the identity-allocation-mode below, or
          #   setting it to "kvstore".
          identity-allocation-mode: crd
          identity-heartbeat-timeout: "30m0s"
          identity-gc-interval: "15m0s"
          cilium-endpoint-gc-interval: "5m0s"
          nodes-gc-interval: "5m0s"
          skip-cnp-status-startup-clean: "false"
          # Disable the usage of CiliumEndpoint CRD
          disable-endpoint-crd: "false"

          # If you want to run cilium in debug mode change this value to true
          debug: "false"
          debug-verbose: ""
          # The agent can be put into the following three policy enforcement modes
          # default, always and never.
          # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
          enable-policy: "default"

          # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
          # address.
          enable-ipv4: "true"

          # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
          # address.
          enable-ipv6: "false"
          # Users who wish to specify their own custom CNI configuration file must set
          # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
          custom-cni-conf: "false"
          enable-bpf-clock-probe: "true"
          # If you want cilium monitor to aggregate tracing for packets, set this level
          # to "low", "medium", or "maximum". The higher the level, the less packets
          # that will be seen in monitor output.
          monitor-aggregation: medium

          # The monitor aggregation interval governs the typical time between monitor
          # notification events for each allowed connection.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-interval: "5s"

          # The monitor aggregation flags determine which TCP flags which, upon the
          # first observation, cause monitor notifications to be generated.
          #
          # Only effective when monitor aggregation is set to "medium" or higher.
          monitor-aggregation-flags: all
          # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
          # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
          bpf-map-dynamic-size-ratio: "0.0025"
          # bpf-policy-map-max specifies the maximum number of entries in endpoint
          # policy map (per endpoint)
          bpf-policy-map-max: "16384"
          # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
          # backend and affinity maps.
          bpf-lb-map-max: "65536"
          bpf-lb-external-clusterip: "false"

          # Pre-allocation of map entries allows per-packet latency to be reduced, at
          # the expense of up-front memory allocation for the entries in the maps. The
          # default value below will minimize memory usage in the default installation;
          # users who are sensitive to latency may consider setting this to "true".
          #
          # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
          # this option and behave as though it is set to "true".
          #
          # If this value is modified, then during the next Cilium startup the restore
          # of existing endpoints and tracking of ongoing connections may be disrupted.
          # As a result, reply packets may be dropped and the load-balancing decisions
          # for established connections may change.
          #
          # If this option is set to "false" during an upgrade from 1.3 or earlier to
          # 1.4 or later, then it may cause one-time disruptions during the upgrade.
          preallocate-bpf-maps: "false"

          # Regular expression matching compatible Istio sidecar istio-proxy
          # container image names
          sidecar-istio-proxy-image: "cilium/istio_proxy"

          # Name of the cluster. Only relevant when building a mesh of clusters.
          cluster-name: default
          # Unique ID of the cluster. Must be unique across all conneted clusters and
          # in the range of 1 and 255. Only relevant when building a mesh of clusters.
          cluster-id: "0"

          # Encapsulation mode for communication between nodes
          # Possible values:
          #   - disabled
          #   - vxlan (default)
          #   - geneve
          tunnel: "vxlan"


          # Enables L7 proxy for L7 policy enforcement and visibility
          enable-l7-proxy: "true"

          enable-ipv4-masquerade: "true"
          enable-ipv6-big-tcp: "false"
          enable-ipv6-masquerade: "true"

          enable-xt-socket-fallback: "true"
          install-no-conntrack-iptables-rules: "false"

          auto-direct-node-routes: "false"
          enable-local-redirect-policy: "false"

          kube-proxy-replacement: "strict"
          kube-proxy-replacement-healthz-bind-address: ""
          bpf-lb-sock: "false"
          enable-health-check-nodeport: "true"
          node-port-bind-protection: "true"
          enable-auto-protect-node-port-range: "true"
          enable-svc-source-range-check: "true"
          enable-l2-neigh-discovery: "true"
          arping-refresh-period: "30s"
          cni-uninstall: "true"
          enable-endpoint-health-checking: "true"
          enable-health-checking: "true"
          enable-well-known-identities: "false"
          enable-remote-node-identity: "true"
          synchronize-k8s-nodes: "true"
          operator-api-serve-addr: "127.0.0.1:9234"
          # Enable Hubble gRPC service.
          enable-hubble: "true"
          # UNIX domain socket for Hubble server to listen to.
          hubble-socket-path: "/var/run/cilium/hubble.sock"
          # An additional address for Hubble server to listen to (e.g. ":4244").
          hubble-listen-address: ":4244"
          hubble-disable-tls: "false"
          hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
          hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
          hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
          ipam: "kubernetes"
          disable-cnp-status-updates: "true"
          enable-vtep: "false"
          vtep-endpoint: ""
          vtep-cidr: ""
          vtep-mask: ""
          vtep-mac: ""
          enable-bgp-control-plane: "false"
          procfs: "/host/proc"
          bpf-root: "/sys/fs/bpf"
          cgroup-root: "/sys/fs/cgroup"
          enable-k8s-terminating-endpoint: "true"
          enable-sctp: "false"
          remove-cilium-node-taints: "true"
          set-cilium-is-up-condition: "true"
          unmanaged-pod-watcher-interval: "15"
          tofqdns-dns-reject-response-code: "refused"
          tofqdns-enable-dns-compression: "true"
          tofqdns-endpoint-max-ip-per-hostname: "50"
          tofqdns-idle-connection-grace-period: "0s"
          tofqdns-max-deferred-connection-deletes: "10000"
          tofqdns-min-ttl: "3600"
          tofqdns-proxy-response-max-delay: "100ms"
          agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
        ---
        # Source: cilium/templates/hubble-relay/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-relay-config
          namespace: kube-system
        data:
          config.yaml: |
            cluster-name: default
            peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
            listen-address: :4245
            dial-timeout: 
            retry-timeout: 
            sort-buffer-len-max: 
            sort-buffer-drain-timeout: 
            tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
            tls-client-key-file: /var/lib/hubble-relay/tls/client.key
            tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
            disable-server-tls: true
        ---
        # Source: cilium/templates/hubble-ui/configmap.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: hubble-ui-nginx
          namespace: kube-system
        data:
          nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
        ---
        # Source: cilium/templates/cilium-agent/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - namespaces
          - services
          - pods
          - endpoints
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - list
          - watch
          # This is used when validating policies in preflight. This will need to stay
          # until we figure out how to avoid "get" inside the preflight, and then
          # should be removed ideally.
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          - ciliumbgppeeringpolicies
          - ciliumclusterwideenvoyconfigs
          - ciliumclusterwidenetworkpolicies
          - ciliumegressgatewaypolicies
          - ciliumendpoints
          - ciliumendpointslices
          - ciliumenvoyconfigs
          - ciliumidentities
          - ciliumlocalredirectpolicies
          - ciliumnetworkpolicies
          - ciliumnodes
          - ciliumnodeconfigs
          verbs:
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          - ciliumendpoints
          - ciliumnodes
          verbs:
          - create
        - apiGroups:
          - cilium.io
          # To synchronize garbage collection of such resources
          resources:
          - ciliumidentities
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          verbs:
          - delete
          - get
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          - ciliumnodes/status
          verbs:
          - get
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          - ciliumendpoints/status
          - ciliumendpoints
          verbs:
          - patch
        ---
        # Source: cilium/templates/cilium-operator/clusterrole.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
          # to automatically delete [core|kube]dns pods so that are starting to being
          # managed by Cilium
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # To remove node taints
          - nodes
          # To set NetworkUnavailable false on startup
          - nodes/status
          verbs:
          - patch
        - apiGroups:
          - discovery.k8s.io
          resources:
          - endpointslices
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform LB IP allocation for BGP
          - services/status
          verbs:
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          # to check apiserver connectivity
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          # to perform the translation of a CNP that contains `ToGroup` to its endpoints
          - services
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies
          - ciliumclusterwidenetworkpolicies
          verbs:
          # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
          - create
          - update
          - deletecollection
          # To update the status of the CNPs and CCNPs
          - patch
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnetworkpolicies/status
          - ciliumclusterwidenetworkpolicies/status
          verbs:
          # Update the auto-generated CNPs and CCNPs status.
          - patch
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpoints
          - ciliumidentities
          verbs:
          # To perform garbage collection of such resources
          - delete
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumidentities
          verbs:
          # To synchronize garbage collection of such resources
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes
          verbs:
          - create
          - update
          - get
          - list
          - watch
            # To perform CiliumNode garbage collector
          - delete
        - apiGroups:
          - cilium.io
          resources:
          - ciliumnodes/status
          verbs:
          - update
        - apiGroups:
          - cilium.io
          resources:
          - ciliumendpointslices
          - ciliumenvoyconfigs
          verbs:
          - create
          - update
          - get
          - list
          - watch
          - delete
          - patch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - update
          resourceNames:
          - ciliumloadbalancerippools.cilium.io
          - ciliumbgppeeringpolicies.cilium.io
          - ciliumclusterwideenvoyconfigs.cilium.io
          - ciliumclusterwidenetworkpolicies.cilium.io
          - ciliumegressgatewaypolicies.cilium.io
          - ciliumendpoints.cilium.io
          - ciliumendpointslices.cilium.io
          - ciliumenvoyconfigs.cilium.io
          - ciliumexternalworkloads.cilium.io
          - ciliumidentities.cilium.io
          - ciliumlocalredirectpolicies.cilium.io
          - ciliumnetworkpolicies.cilium.io
          - ciliumnodes.cilium.io
          - ciliumnodeconfigs.cilium.io
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - ciliumloadbalancerippools/status
          verbs:
          - patch
        # For cilium-operator running in HA mode.
        #
        # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
        # between multiple running instances.
        # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
        # common and fewer objects in the cluster watch "all Leases".
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        ---
        # Source: cilium/templates/hubble-ui/clusterrole.yaml
        kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - networking.k8s.io
          resources:
          - networkpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - componentstatuses
          - endpoints
          - namespaces
          - nodes
          - pods
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - cilium.io
          resources:
          - "*"
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium
        subjects:
        - kind: ServiceAccount
          name: "cilium"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: cilium-operator
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: cilium-operator
        subjects:
        - kind: ServiceAccount
          name: "cilium-operator"
          namespace: kube-system
        ---
        # Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: hubble-ui
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: hubble-ui
        subjects:
        - kind: ServiceAccount
          name: "hubble-ui"
          namespace: kube-system
        ---
        # Source: cilium/templates/cilium-agent/role.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: Role
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        ---
        # Source: cilium/templates/cilium-agent/rolebinding.yaml
        apiVersion: rbac.authorization.k8s.io/v1
        kind: RoleBinding
        metadata:
          name: cilium-config-agent
          namespace: kube-system
          labels:
            app.kubernetes.io/part-of: cilium
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: Role
          name: cilium-config-agent
        subjects:
          - kind: ServiceAccount
            name: "cilium"
            namespace: kube-system
        ---
        # Source: cilium/templates/hubble-relay/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-relay
          ports:
          - protocol: TCP
            port: 80
            targetPort: 4245
        ---
        # Source: cilium/templates/hubble-ui/service.yaml
        kind: Service
        apiVersion: v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          type: "ClusterIP"
          selector:
            k8s-app: hubble-ui
          ports:
            - name: http
              port: 80
              targetPort: 8081
        ---
        # Source: cilium/templates/hubble/peer-service.yaml
        apiVersion: v1
        kind: Service
        metadata:
          name: hubble-peer
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: hubble-peer
        spec:
          selector:
            k8s-app: cilium
          ports:
          - name: peer-service
            port: 443
            protocol: TCP
            targetPort: 4244
          internalTrafficPolicy: Local
        ---
        # Source: cilium/templates/cilium-agent/daemonset.yaml
        apiVersion: apps/v1
        kind: DaemonSet
        metadata:
          name: cilium
          namespace: kube-system
          labels:
            k8s-app: cilium
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-agent
        spec:
          selector:
            matchLabels:
              k8s-app: cilium
          updateStrategy:
            rollingUpdate:
              maxUnavailable: 2
            type: RollingUpdate
          template:
            metadata:
              annotations:
                # Set app AppArmor's profile to "unconfined". The value of this annotation
                # can be modified as long users know which profiles they have available
                # in AppArmor.
                container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
                container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
              labels:
                k8s-app: cilium
                app.kubernetes.io/name: cilium-agent
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
              - name: cilium-agent
                image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-agent
                args:
                - --config-dir=/tmp/cilium/config-map
                startupProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  failureThreshold: 105
                  periodSeconds: 2
                  successThreshold: 1
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 10
                  timeoutSeconds: 5
                readinessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9879
                    scheme: HTTP
                    httpHeaders:
                    - name: "brief"
                      value: "true"
                  periodSeconds: 30
                  successThreshold: 1
                  failureThreshold: 3
                  timeoutSeconds: 5
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_CLUSTERMESH_CONFIG
                  value: /var/lib/cilium/clustermesh/
                - name: CILIUM_CNI_CHAINING_MODE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: cni-chaining-mode
                      optional: true
                - name: CILIUM_CUSTOM_CNI_CONF
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: custom-cni-conf
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "192.168.1.101"
                - name: KUBERNETES_SERVICE_PORT
                  value: "6443"
                lifecycle:
                  postStart:
                    exec:
                      command:
                      - "bash"
                      - "-c"
                      - |
                        /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
                  preStop:
                    exec:
                      command:
                      - /cni-uninstall.sh
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - CHOWN
                      - KILL
                      - NET_ADMIN
                      - NET_RAW
                      - IPC_LOCK
                      - SYS_ADMIN
                      - SYS_RESOURCE
                      - DAC_OVERRIDE
                      - FOWNER
                      - SETGID
                      - SETUID
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                # Unprivileged containers need to mount /proc/sys/net from the host
                # to have write access
                - mountPath: /host/proc/sys/net
                  name: host-proc-sys-net
                # Unprivileged containers need to mount /proc/sys/kernel from the host
                # to have write access
                - mountPath: /host/proc/sys/kernel
                  name: host-proc-sys-kernel
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Unprivileged containers can't set mount propagation to bidirectional
                  # in this case we will mount the bpf fs from an init container that
                  # is privileged and set the mount propagation from host to container
                  # in Cilium.
                  mountPropagation: HostToContainer
                # Check for duplicate mounts before mounting
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                - name: cilium-run
                  mountPath: /var/run/cilium
                - name: etc-cni-netd
                  mountPath: /host/etc/cni/net.d
                - name: clustermesh-secrets
                  mountPath: /var/lib/cilium/clustermesh
                  readOnly: true
                  # Needed to be able to load kernel modules
                - name: lib-modules
                  mountPath: /lib/modules
                  readOnly: true
                - name: xtables-lock
                  mountPath: /run/xtables.lock
                - name: hubble-tls
                  mountPath: /var/lib/cilium/tls/hubble
                  readOnly: true
                - name: tmp
                  mountPath: /tmp
              initContainers:
              - name: config
                image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
                imagePullPolicy: IfNotPresent
                command:
                - cilium
                - build-config
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: KUBERNETES_SERVICE_HOST
                  value: "192.168.1.101"
                - name: KUBERNETES_SERVICE_PORT
                  value: "6443"
                volumeMounts:
                - name: tmp
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              # Mount the bpf fs if it is not mounted. We will perform this task
              # from a privileged container because the mount propagation bidirectional
              # only works from privileged containers.
              - name: mount-bpf-fs
                image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
                imagePullPolicy: IfNotPresent
                args:
                - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
                command:
                - /bin/bash
                - -c
                - --
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  privileged: true
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  mountPropagation: Bidirectional
              - name: clean-cilium-state
                image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
                imagePullPolicy: IfNotPresent
                command:
                - /init-container.sh
                env:
                - name: CILIUM_ALL_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-state
                      optional: true
                - name: CILIUM_BPF_STATE
                  valueFrom:
                    configMapKeyRef:
                      name: cilium-config
                      key: clean-cilium-bpf-state
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "192.168.1.101"
                - name: KUBERNETES_SERVICE_PORT
                  value: "6443"
                terminationMessagePolicy: FallbackToLogsOnError
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    add:
                      - NET_ADMIN
                      - SYS_ADMIN
                      - SYS_RESOURCE
                    drop:
                      - ALL
                volumeMounts:
                - name: bpf-maps
                  mountPath: /sys/fs/bpf
                  # Required to mount cgroup filesystem from the host to cilium agent pod
                - name: cilium-cgroup
                  mountPath: /sys/fs/cgroup
                  mountPropagation: HostToContainer
                - name: cilium-run
                  mountPath: /var/run/cilium
                resources:
                  requests:
                    cpu: 100m
                    memory: 100Mi # wait-for-kube-proxy
              # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
              - name: install-cni-binaries
                image: "quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314"
                imagePullPolicy: IfNotPresent
                command:
                  - "/install-plugin.sh"
                resources:
                  requests:
                    cpu: 100m
                    memory: 10Mi
                securityContext:
                  seLinuxOptions:
                    level: s0
                    type: spc_t
                  capabilities:
                    drop:
                      - ALL
                terminationMessagePolicy: FallbackToLogsOnError
                volumeMounts:
                  - name: cni-path
                    mountPath: /host/opt/cni/bin
              restartPolicy: Always
              priorityClassName: system-node-critical
              serviceAccount: "cilium"
              serviceAccountName: "cilium"
              automountServiceAccountToken: true
              terminationGracePeriodSeconds: 1
              hostNetwork: true
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # For sharing configuration between the "config" initContainer and the agent
              - name: tmp
                emptyDir: {}
                # To keep state between restarts / upgrades
              - name: cilium-run
                hostPath:
                  path: /var/run/cilium
                  type: DirectoryOrCreate
                # To keep state between restarts / upgrades for bpf maps
              - name: bpf-maps
                hostPath:
                  path: /sys/fs/bpf
                  type: DirectoryOrCreate
              # To keep state between restarts / upgrades for cgroup2 filesystem
              - name: cilium-cgroup
                hostPath:
                  path: /sys/fs/cgroup
                  type: DirectoryOrCreate
              # To install cilium cni plugin in the host
              - name: cni-path
                hostPath:
                  path:  /opt/cni/bin
                  type: DirectoryOrCreate
                # To install cilium cni configuration in the host
              - name: etc-cni-netd
                hostPath:
                  path: /etc/cni/net.d
                  type: DirectoryOrCreate
                # To be able to load kernel modules
              - name: lib-modules
                hostPath:
                  path: /lib/modules
                # To access iptables concurrently with other processes (e.g. kube-proxy)
              - name: xtables-lock
                hostPath:
                  path: /run/xtables.lock
                  type: FileOrCreate
                # To read the clustermesh configuration
              - name: clustermesh-secrets
                secret:
                  secretName: cilium-clustermesh
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  optional: true
              - name: host-proc-sys-net
                hostPath:
                  path: /proc/sys/net
                  type: Directory
              - name: host-proc-sys-kernel
                hostPath:
                  path: /proc/sys/kernel
                  type: Directory
              - name: hubble-tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-server-certs
                      optional: true
                      items:
                      - key: ca.crt
                        path: client-ca.crt
                      - key: tls.crt
                        path: server.crt
                      - key: tls.key
                        path: server.key
        ---
        # Source: cilium/templates/cilium-operator/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cilium-operator
          namespace: kube-system
          labels:
            io.cilium/app: operator
            name: cilium-operator
            app.kubernetes.io/part-of: cilium
            app.kubernetes.io/name: cilium-operator
        spec:
          # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
          # for more details.
          replicas: 2
          selector:
            matchLabels:
              io.cilium/app: operator
              name: cilium-operator
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                io.cilium/app: operator
                name: cilium-operator
                app.kubernetes.io/part-of: cilium
                app.kubernetes.io/name: cilium-operator
            spec:
              containers:
              - name: cilium-operator
                image: "quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910"
                imagePullPolicy: IfNotPresent
                command:
                - cilium-operator-generic
                args:
                - --config-dir=/tmp/cilium/config-map
                - --debug=$(CILIUM_DEBUG)
                env:
                - name: K8S_NODE_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: spec.nodeName
                - name: CILIUM_K8S_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: CILIUM_DEBUG
                  valueFrom:
                    configMapKeyRef:
                      key: debug
                      name: cilium-config
                      optional: true
                - name: KUBERNETES_SERVICE_HOST
                  value: "192.168.1.101"
                - name: KUBERNETES_SERVICE_PORT
                  value: "6443"
                livenessProbe:
                  httpGet:
                    host: "127.0.0.1"
                    path: /healthz
                    port: 9234
                    scheme: HTTP
                  initialDelaySeconds: 60
                  periodSeconds: 10
                  timeoutSeconds: 3
                volumeMounts:
                - name: cilium-config-path
                  mountPath: /tmp/cilium/config-map
                  readOnly: true
                terminationMessagePolicy: FallbackToLogsOnError
              hostNetwork: true
              restartPolicy: Always
              priorityClassName: system-cluster-critical
              serviceAccount: "cilium-operator"
              serviceAccountName: "cilium-operator"
              automountServiceAccountToken: true
              # In HA mode, cilium-operator pods must not be scheduled on the same
              # node as they will clash with each other.
              affinity:
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        io.cilium/app: operator
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
                - operator: Exists
              volumes:
                # To read the configuration from the config map
              - name: cilium-config-path
                configMap:
                  name: cilium-config
        ---
        # Source: cilium/templates/hubble-relay/deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: hubble-relay
          namespace: kube-system
          labels:
            k8s-app: hubble-relay
            app.kubernetes.io/name: hubble-relay
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-relay
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-relay
                app.kubernetes.io/name: hubble-relay
                app.kubernetes.io/part-of: cilium
            spec:
              containers:
                - name: hubble-relay
                  image: "quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6"
                  imagePullPolicy: IfNotPresent
                  command:
                    - hubble-relay
                  args:
                    - serve
                  ports:
                    - name: grpc
                      containerPort: 4245
                  readinessProbe:
                    tcpSocket:
                      port: grpc
                  livenessProbe:
                    tcpSocket:
                      port: grpc
                  volumeMounts:
                  - name: config
                    mountPath: /etc/hubble-relay
                    readOnly: true
                  - name: tls
                    mountPath: /var/lib/hubble-relay/tls
                    readOnly: true
                  terminationMessagePolicy: FallbackToLogsOnError
              restartPolicy: Always
              priorityClassName: 
              serviceAccount: "hubble-relay"
              serviceAccountName: "hubble-relay"
              automountServiceAccountToken: false
              terminationGracePeriodSeconds: 1
              affinity:
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchLabels:
                        k8s-app: cilium
                    topologyKey: kubernetes.io/hostname
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - name: config
                configMap:
                  name: hubble-relay-config
                  items:
                  - key: config.yaml
                    path: config.yaml
              - name: tls
                projected:
                  # note: the leading zero means this number is in octal representation: do not remove it
                  defaultMode: 0400
                  sources:
                  - secret:
                      name: hubble-relay-client-certs
                      items:
                        - key: ca.crt
                          path: hubble-server-ca.crt
                        - key: tls.crt
                          path: client.crt
                        - key: tls.key
                          path: client.key
        ---
        # Source: cilium/templates/hubble-ui/deployment.yaml
        kind: Deployment
        apiVersion: apps/v1
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          replicas: 1
          selector:
            matchLabels:
              k8s-app: hubble-ui
          strategy:
            rollingUpdate:
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              annotations:
              labels:
                k8s-app: hubble-ui
                app.kubernetes.io/name: hubble-ui
                app.kubernetes.io/part-of: cilium
            spec:
              securityContext:
                fsGroup: 1001
                runAsGroup: 1001
                runAsUser: 1001
              priorityClassName: 
              serviceAccount: "hubble-ui"
              serviceAccountName: "hubble-ui"
              automountServiceAccountToken: true
              containers:
              - name: frontend
                image: "quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8"
                imagePullPolicy: IfNotPresent
                ports:
                - name: http
                  containerPort: 8081
                volumeMounts:
                - name: hubble-ui-nginx-conf
                  mountPath: /etc/nginx/conf.d/default.conf
                  subPath: nginx.conf
                - name: tmp-dir
                  mountPath: /tmp
                terminationMessagePolicy: FallbackToLogsOnError
              - name: backend
                image: "quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839"
                imagePullPolicy: IfNotPresent
                env:
                - name: EVENTS_SERVER_PORT
                  value: "8090"
                - name: FLOWS_API_ADDR
                  value: "hubble-relay:80"
                ports:
                - name: grpc
                  containerPort: 8090
                volumeMounts:
                terminationMessagePolicy: FallbackToLogsOnError
              nodeSelector:
                kubernetes.io/os: linux
              volumes:
              - configMap:
                  defaultMode: 420
                  name: hubble-ui-nginx
                name: hubble-ui-nginx-conf
              - emptyDir: {}
                name: tmp-dir
        ---
        # Source: cilium/templates/hubble-ui/ingress.yaml
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: hubble-ui
          namespace: kube-system
          labels:
            k8s-app: hubble-ui
            app.kubernetes.io/name: hubble-ui
            app.kubernetes.io/part-of: cilium
        spec:
          ingressClassName: nginx
          rules:
            - host: hubble.ck3.cluster.qaware.de
              http:
                paths:
                  - path: "/"
                    pathType: Prefix
                    backend:
                      service:
                        name: hubble-ui
                        port:
                          name: http
        ---
        # Source: cilium/templates/cilium-secrets-namespace.yaml
        # Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
machine:
  network:
    interfaces:
      - interface: eth0
        mtu: 1500
        dhcp: true
        vip:
          ip: 192.168.1.101
